rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ================================
    // ‚öôÔ∏è HELPER FUNCTIONS
    // ================================
    function isSignedIn() {
      return request.auth != null;
    }

    function userDoc() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function isAdmin() {
      return isSignedIn() && userDoc().data.role == 'admin';
    }

    function isActive() {
      return isSignedIn() && userDoc().data.isActive == true;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // ================================
    // üë§ USERS COLLECTION
    // ================================
    match /users/{userId} {
      // Cho ph√©p ƒë·ªçc th√¥ng tin ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p (ƒë·ªÉ h√†m get() ho·∫°t ƒë·ªông)
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());

      // Cho ph√©p t·∫°o t√†i kho·∫£n ri√™ng c·ªßa h·ªç
      allow create: if request.auth != null && request.auth.uid == userId;

      // Cho ph√©p user ch·ªânh s·ª≠a ch√≠nh h·ªç (kh√¥ng ƒë·ªïi role ho·∫∑c isActive)
      allow update: if isAdmin() ||
        (isOwner(userId) &&
         request.resource.data.role == resource.data.role &&
         request.resource.data.isActive == resource.data.isActive);

      // X√≥a: ch·ªâ admin
      allow delete: if isAdmin();
    }

    // ================================
    // üè∏ COURTS COLLECTION
    // ================================
    match /courts/{courtId} {
      allow read: if isActive();
      allow create, update, delete: if isAdmin();
    }

    // ================================
    // üë• MEMBERS COLLECTION
    // ================================
    match /members/{memberId} {
      allow read: if isActive();
      allow create, update, delete: if isAdmin();
    }

    // ================================
    // üë™ GROUPS COLLECTION
    // ================================
    // match /groups/{groupId} {
    //   allow read: if isActive();
    //   allow create, update, delete: if isAdmin();
    // }
    // 
    // ================================
    // üë™ GROUPS COLLECTION (C·∫¨P NH·∫¨T)
    // ================================
    match /groups/{groupId} {
      // ƒê·ªçc: User active c√≥ th·ªÉ ƒë·ªçc t·∫•t c·∫£ nh√≥m
      allow read: if isActive();

      // T·∫°o: User active c√≥ th·ªÉ t·∫°o nh√≥m v·ªõi createdBy l√† ch√≠nh h·ªç
      allow create: if isActive() && 
                       request.resource.data.createdBy == request.auth.uid;

      // C·∫≠p nh·∫≠t: 
      // - Admin c√≥ th·ªÉ c·∫≠p nh·∫≠t b·∫•t k·ª≥ nh√≥m n√†o
      // - User ch·ªâ c√≥ th·ªÉ c·∫≠p nh·∫≠t nh√≥m c·ªßa m√¨nh
      allow update: if isActive() && 
                       (isAdmin() || resource.data.createdBy == request.auth.uid);

      // X√≥a:
      // - Admin c√≥ th·ªÉ x√≥a b·∫•t k·ª≥ nh√≥m n√†o  
      // - User ch·ªâ c√≥ th·ªÉ x√≥a nh√≥m c·ªßa m√¨nh
      allow delete: if isActive() && 
                       (isAdmin() || resource.data.createdBy == request.auth.uid);
    }

    // ================================
    // üóìÔ∏è SESSIONS COLLECTION
    // ================================
    match /sessions/{sessionId} {
      allow read: if isActive();

      // User ch·ªâ ƒë∆∞·ª£c t·∫°o session c·ªßa ch√≠nh h·ªç
      allow create: if isActive() &&
                    request.resource.data.createdBy == request.auth.uid;

      // User ƒë∆∞·ª£c update session c·ªßa h·ªç, admin c√≥ full quy·ªÅn
      allow update: if isActive() &&
                    (isAdmin() || resource.data.createdBy == request.auth.uid);

      // X√≥a t∆∞∆°ng t·ª±
      allow delete: if isActive() &&
                    (isAdmin() || resource.data.createdBy == request.auth.uid);
    }
    
    
match /tournaments/{tournamentId} {
  // ƒê·ªçc: User ƒë√£ ƒëƒÉng nh·∫≠p v√† active
  allow read: if isActive();
  
  // T·∫°o: User active c√≥ th·ªÉ t·∫°o tournament
  allow create: if isActive() && 
                   request.resource.data.createdBy == request.auth.uid;
  
  // C·∫≠p nh·∫≠t: 
  // - Admin c√≥ th·ªÉ c·∫≠p nh·∫≠t b·∫•t k·ª≥ tournament n√†o
  // - User ch·ªâ c√≥ th·ªÉ c·∫≠p nh·∫≠t tournament c·ªßa m√¨nh
  allow update: if isActive() && 
                   (isAdmin() || resource.data.createdBy == request.auth.uid);
  
  // X√≥a:
  // - Admin c√≥ th·ªÉ x√≥a b·∫•t k·ª≥ tournament n√†o
  // - User ch·ªâ c√≥ th·ªÉ x√≥a tournament c·ªßa m√¨nh
  allow delete: if isActive() && 
                   (isAdmin() || resource.data.createdBy == request.auth.uid);
}
    // ================================
    // ‚öôÔ∏è SETTINGS COLLECTION
    // ================================
    match /settings/{settingId} {
      allow read: if isActive();
      allow create, update, delete: if isAdmin();
    }

    // ================================
    // üö´ DEFAULT DENY
    // ================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}